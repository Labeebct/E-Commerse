<%- include('../components/head.ejs') %>
    
    <div class="wrapper orderopen_wrapper">

      <%- include('../components/top_nav.ejs') %> 

      <div class="content order_open_content">
         <div class="loading_screen"><img src="/images/loading gif.gif" class="loading_gif" alt=""></div>
        <h3 class="order_id">ORDER ID : <span>832802746662321</span></h3>

        <div class="order_frames order_adress_frame">
           <div class="delivery_adress_text">Delivery Address</div>
           <div class="adrress_details">
             <h4 class="user_name">Labeeb ct</h4>
             <div class="user_address">
                <p><%= shippAddress.country %></p>
                <p><%= shippAddress.state %></p>
                <p><%= shippAddress.district %></p>
                <p><%= shippAddress.zip %></p>
                <p><%= shippAddress.address %></p>
             </div>
             <h4 class="user_phone">Phone number</h4>
             <p><%= shippAddress.mobilenum %></p>
           </div>
        </div>

        <div class="order_frames order_product_frame product<%= userOrder.productId._id %>" onclick="productOpen(event,'<%= userOrder.productId._id %>')">
              <div class="product_img_div"><img src="<%= userOrder.productId.productimg[0] %>" style="height: 8.5rem;"></div>
              <div class="product_details_div">
                  <div class="details_div">
                    <p class="product_name"><%= userOrder.productId.productname %></p>
                    <p class="color_size">SIZE : <span><%= userOrder.size %></span></p>
                    <p class="color_size">COLOR : <span style="color: <%= userOrder.color %>;"><%= userOrder.color.toUpperCase() %></span></p>
                    <p class="color_size">QTY : <span><%= userOrder.quantity %></span></p>
                    <p class="color_size">PAYMENT : <span><%= userOrder.payment_methode.toUpperCase() %></span></p>
                    <div style="display: flex; gap: .9rem; align-items: center;">
                      <p class="old_price">₹<%= userOrder.productId.oldprice %></p>
                      <p class="new_price">₹<%= userOrder.productId.newprice %></p>
                      <p class="discount"><%= Math.round(100 - (userOrder.productId.newprice / userOrder.productId.oldprice * 100)) %>%</p>
                   </div> 
                  </div>
               </div>
               <div class="order_cancel">
               <% if(userOrder.status == 'delivered'){ %>
                <button disabled class="cancel_Order_btn" style="color: green; border: 1px solid green;">DELIVERED</button>
               <% }else{ %>
                  <button type="button" class="cancel_Order_btn" onclick="cancelOrder(event,'<%= userOrder._id %>')">
                    <%= userOrder.status == 'cancelled' ? 'ORDER CANCELLED' : 'CANCEL ORDER'%>
                 </button>
                  <% } %>
               </div>
               <script>
                     
                  const cancelOrder = async(event,productId) =>{
                     event.preventDefault()
                     event.stopPropagation()   
                     
                     const orderBtn = document.querySelector('.cancel_Order_btn')

                     if(orderBtn.textContent !== 'ORDER CANCELLED'){

                        const swalWithBootstrapButtons = Swal.mixin({
                        customClass: {
                           confirmButton: "btn btn-success",
                           cancelButton: "btn btn-danger",
                           customClass: {
                           confirmButton: 'btn btn-danger',
                           cancelButton: 'btn btn-secondary'
                           }
                        },
                        buttonsStyling: false
                        });
                        swalWithBootstrapButtons.fire({
                        title: "Are you sure?",
                        text: "You want to cancel the order?",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonText: "Yes, cancel it!",
                        cancelButtonText: "No, cancel!",
                        reverseButtons: true,
                        customClass: {
                        confirmButton: 'btn btn-danger',
                        cancelButton: 'btn btn-secondary'
                        }
                        }).then(async(result) => {
                        if (result.isConfirmed) {
                           const response = await fetch(`/cancel_order`,{
                              method:'PUT',
                              headers:{
                                 'Content-Type':'application/json'
                              },
                              body:JSON.stringify({productId})
                        })
                     
                        const result = await response.json()
                     
                        if(result.success){
                           swalWithBootstrapButtons.fire({
                              title: "CANCELLED!",
                              text: "Your Order has been cancelled.",
                              icon: "success"
                           });
                           orderBtn.textContent = 'ORDER CANCELLED'
                        }
                        } else if (
                           /* Read more about handling dismissals below */
                           result.dismiss === Swal.DismissReason.cancel
                        ) {
                           swalWithBootstrapButtons.fire({
                              title: "Cancelled",
                              text: "Your imaginary file is safe :)",
                              icon: "error"
                           });
                        }
                        });
                    
                     }

                  }

               </script>
        </div>


        <div class="review_exist" style="display: none;"><%- JSON.stringify(reviewExist) %></div>

        <% if(userOrder.status == 'delivered'){ %>

        <div class="order_frames review_div">
           <div class="reviewproduct">
            <p>Rate your Product</p>
            <div class="rating_stars">
               <% if(reviewExist){ %>
                  <% for (let i = 1; i<=userRating.rating ; i++) { %>
                     <i value="<%= i %>" class="bi bi-star-fill"></i>
                 <% } %>
                 <% for (let i = userRating.rating + 1; i <= 5; i++) { %>
                  <i value="<%= i %>" class="bi bi-star"></i>
              <% } %>
               <% }else{ %>
               <i value="1" class="bi rate_star bi-star"></i>
               <i value="2" class="bi rate_star bi-star"></i>
               <i value="3" class="bi rate_star bi-star"></i>
               <i value="4" class="bi rate_star bi-star"></i>
               <i value="5" class="bi rate_star bi-star"></i>
               <% } %>
            </div>
           </div>
           <div class="review_frame">
            <textarea class="review_textarea" placeholder="Review your Product here.." spellcheck="false"></textarea>
            <button type="button" onclick="submitReview('<%= userOrder.productId._id %>')" class="review_submit_btn" >Submit Review</button>
           </div>
        </div>

        <% } %>


        </div>

        <%- include('../../common/footer.ejs') %>

        </div>

<script src="/javascript/product-open.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

var productRating = 0;

const rateProduct = document.querySelector('.reviewproduct')
const reviewProduct = document.querySelector('.review_frame')
const review = document.querySelector('.review_exist').innerHTML
let reviewExist = JSON.parse(review)



rateProduct.addEventListener('click',()=>{
   if(!reviewExist){
      reviewProduct.style.display = 'block'
      reviewProduct.style.height = '10rem'
   }
})


const stars = document.querySelectorAll('.rate_star')
stars.forEach((star,index)=>{
   star.addEventListener('click',(e)=>{
     const rating = parseInt(e.target.getAttribute('value'))

      if (star.classList.contains('bi-star')) {
            star.classList.replace('bi-star', 'bi-star-fill');
        } else {
            star.classList.replace('bi-star-fill', 'bi-star');
        }

        for (let i = 0; i < index+1; i++) {
           stars[i].classList.replace('bi-star', 'bi-star-fill');
         }
         
         for (let i = index+1; i < stars.length; i++) {
            stars[i].classList.replace('bi-star-fill', 'bi-star');
        }

        productRating = Number(rating)
   })
})




const status = document.querySelector('.status<%= userOrder._id %>')

if(status.innerHTML == 'PENDING'){
      status.style.color = 'rgb(228, 202, 0)'
   }
   else if(status.innerHTML == 'CONFIRMED'){
      status.style.color = 'rgb(255, 115, 0)'
   }
   else if(status.innerHTML == 'SHIPPED'){
      status.style.color = 'rgb(4, 2, 131)'
   }
   else if(status.innerHTML == 'DELIVERED'){
      status.style.color = 'rgb(0, 170, 0)'
   }
   else{
      status.style.color = 'red'
      
   }
   


async function submitReview(productId){
   try {

      const textArea = document.querySelector('.review_textarea')
      const review =textArea.value

      if(!review){
         textArea.value = 'Please provide a review about product'
         textArea.style.color = 'red'
         setTimeout(() => {
            textArea.value = ''
            textArea.style.color = ''
         }, 2000);
      }
      else if(review.length < 5){
         textArea.value = 'Please share more information'
         textArea.style.color = 'red'
         setTimeout(() => {
            textArea.value = ''
            textArea.style.color = ''
         }, 2000);
      }
      else{
          const respose = await fetch(`/ratind_and_review?productId=${productId}`,{
            method:'POST',
            headers:{
               'Content-Type':'application/json'
            },
            body:JSON.stringify({review,rating:productRating})
          })
          const result = await respose.json()
          if(result.success){
            Swal.fire({
            title: "Thanks!",
            text: "Thank you for your review",
            icon: "success"
            });
            reviewProduct.style.display = 'none'
            reviewProduct.style.height = '0rem'
            reviewExist=true 
          }
      }

      
   } catch (error) {
      console.log('Error in fetching product rating',error);
   }
}




</script>

<%- include('../../common/end.ejs') %>